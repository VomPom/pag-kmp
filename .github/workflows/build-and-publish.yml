name: Build and Publish to Maven Central

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      tag_version:
        description: 'Specify the version tag (required)'
        required: true

permissions:
  contents: read

jobs:
  build-and-publish:
    name: Build and Publish
    strategy:
      matrix:
        os: [ macos-14 ] #[ windows-latest , macos-13 , macos-14 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan
            ~/.gradle/caches
            ~/.gradle/wrapper
            pag4j/libpag/third_party/out
            pag4j/libpag/cmake-build-*
          key: ${{ runner.os }}-deps-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'pag4j/libpag/DEPS', 'pag4j/libpag/vendor.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Install build dependencies
        run: |
          brew install cmake ninja node
          npm install -g depsync

      - name: Sync libpag dependencies
        working-directory: pag4j/libpag
        run: |
          chmod +x sync_deps.sh
          ./sync_deps.sh

      - name: Build tgfx
        working-directory: pag4j/libpag/tgfx
        run: |
          if [ -f "build_tgfx" ]; then
            node build_tgfx -p mac -a x64 -o out/cache/release/mac
          else
            mkdir -p cmake-build-release
            cd cmake-build-release
            cmake .. -DCMAKE_BUILD_TYPE=Release -GNinja
            ninja
          fi

      - name: Build libpag
        working-directory: pag4j/libpag
        run: |
          mkdir -p cmake-build-release
          cd cmake-build-release
          cmake .. -DCMAKE_BUILD_TYPE=Release -GNinja \
            -DPAG_USE_QT=OFF \
            -DPAG_BUILD_SHARED=ON \
            -DPAG_BUILD_FRAMEWORK=ON \
            -DPAG_USE_OPENGL=ON
          ninja

      - name: Build pag4j native library
        working-directory: pag4j
        run: |
          chmod +x build_pag4j_native.sh
          ./build_pag4j_native.sh

      - name: Build pag4j
        run: ./gradlew :pag4j:build

      - name: Build library
        run: ./gradlew :library:build

      - name: Publish to Maven Central (on tag)
        if: startsWith(github.ref, 'refs/tags/v')
        run: ./gradlew publishToMavenCentral --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY_CONTENTS }}

      - name: Publish snapshot (on main branch)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: ./gradlew publishToMavenCentral --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY_CONTENTS }}

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            pag4j/build/libs/
            library/build/libs/
            pag4j/libpag/cmake-build-release/libpag.*
            pag4j/.cxx/libpag4j.*
          retention-days: 30

      - name: Draft Release
        uses: ncipollo/release-action@v1
        with:
          draft: true
          allowUpdates: true
          generateReleaseNotes: true
          tag: "v${{ inputs.tag_version }}"
          path: |
            pag4j/build/libs/
            library/build/libs/
            pag4j/libpag/cmake-build-release/libpag.*
            pag4j/.cxx/libpag4j.*
          token: ${{ secrets.GH_TOKEN }}